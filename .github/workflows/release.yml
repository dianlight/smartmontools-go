name: Release

on:
  push:
    tags:
      - 'v*'
      - 'pre-*'

jobs:
  build-artifacts:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]
    outputs:
      artifact-path: ${{ steps.set-artifact.outputs.path }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Prepare build info
        id: set-artifact
        run: |
          OS=${{ matrix.os }}
          ARCH=${{ matrix.arch }}
          BASE_NAME=smartmontools-go
          if [ "${OS}" = "windows" ]; then EXT=.exe; else EXT=; fi
          ARTNAME=${BASE_NAME}_${OS}_${ARCH}${EXT}
          echo "::set-output name=path::${ARTNAME}"

      - name: Build
        run: |
          set -euo pipefail
          mkdir -p dist
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -ldflags "-s -w" -o dist/smartmontools-go_${{ matrix.os }}_${{ matrix.arch }}
          if [ "${{ matrix.os }}" = "windows" ]; then zip -j dist/smartmontools-go_${{ matrix.os }}_${{ matrix.arch }}.zip dist/smartmontools-go_${{ matrix.os }}_${{ matrix.arch }}; rm dist/smartmontools-go_${{ matrix.os }}_${{ matrix.arch }}; else zip -j dist/smartmontools-go_${{ matrix.os }}_${{ matrix.arch }}.zip dist/smartmontools-go_${{ matrix.os }}_${{ matrix.arch }}; fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: smartmontools-go-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/*.zip

  create-release:
    needs: build-artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          files: release-assets/*
          tag_name: ${{ github.ref }}
          name: ${{ github.ref }}
          prerelease: ${{ startsWith(github.ref, 'refs/tags/pre-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
